name: Release Preview
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  pr-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci --legacy-peer-deps && npm run build

      - name: Generate release preview
        id: semantic
        run: |
          # run semantic-release in dry-run and capture JSON output
          npx semantic-release --dry-run --no-ci --dry-run-ignore-scripts > sr-output.txt || true
          # extract version and notes from the JSON blob
          VERSION=$(jq -r '.nextRelease.version' sr-output.txt)
          NOTES=$(jq -r '.nextRelease.notes' sr-output.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          # wrap notes so they survive newlines
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on the PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸš€ **Release Preview**  
            The next version will be **${{ steps.semantic.outputs.version }}** when this PR is merged into **main**.

            <details>
            <summary>Release notes</summary>

            ${{ steps.semantic.outputs.notes }}
            </details>
